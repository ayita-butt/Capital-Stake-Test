/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function autocomplete(inp, arr) {\r\n  /*the autocomplete function takes two arguments,\r\n  the text field element and an array of possible autocompleted values:*/\r\n  var currentFocus;\r\n  /*execute a function when someone writes in the text field:*/\r\n  inp.addEventListener(\"input\", function(e) {\r\n      var a, b, i, val = this.value;\r\n      /*close any already open lists of autocompleted values*/\r\n      closeAllLists();\r\n      if (!val) { return false;}\r\n      currentFocus = -1;\r\n      /*create a DIV element that will contain the items (values):*/\r\n      a = document.createElement(\"DIV\");\r\n      a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n      a.setAttribute(\"class\", \"autocomplete-items\");\r\n      /*append the DIV element as a child of the autocomplete container:*/\r\n      this.parentNode.appendChild(a);\r\n      /*for each item in the array...*/\r\n      for (i = 0; i < arr.length; i++) {\r\n        /*check if the item starts with the same letters as the text field value:*/\r\n        if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\r\n          /*create a DIV element for each matching element:*/\r\n          b = document.createElement(\"DIV\");\r\n          /*make the matching letters bold:*/\r\n          b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\r\n          b.innerHTML += arr[i].substr(val.length);\r\n          /*insert a input field that will hold the current array item's value:*/\r\n          b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\r\n          /*execute a function when someone clicks on the item value (DIV element):*/\r\n          b.addEventListener(\"click\", function(e) {\r\n              /*insert the value for the autocomplete text field:*/\r\n              inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n              /*close the list of autocompleted values,\r\n              (or any other open lists of autocompleted values:*/\r\n              closeAllLists();\r\n          });\r\n          a.appendChild(b);\r\n        }\r\n      }\r\n  });\r\n  /*execute a function presses a key on the keyboard:*/\r\n  inp.addEventListener(\"keydown\", function(e) {\r\n      var x = document.getElementById(this.id + \"autocomplete-list\");\r\n      if (x) x = x.getElementsByTagName(\"div\");\r\n      if (e.keyCode == 40) {\r\n        /*If the arrow DOWN key is pressed,\r\n        increase the currentFocus variable:*/\r\n        currentFocus++;\r\n        /*and and make the current item more visible:*/\r\n        addActive(x);\r\n      } else if (e.keyCode == 38) { //up\r\n        /*If the arrow UP key is pressed,\r\n        decrease the currentFocus variable:*/\r\n        currentFocus--;\r\n        /*and and make the current item more visible:*/\r\n        addActive(x);\r\n      } else if (e.keyCode == 13) {\r\n        /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n        e.preventDefault();\r\n        if (currentFocus > -1) {\r\n          /*and simulate a click on the \"active\" item:*/\r\n          if (x) x[currentFocus].click();\r\n        }\r\n      }\r\n  });\r\n  function addActive(x) {\r\n    /*a function to classify an item as \"active\":*/\r\n    if (!x) return false;\r\n    /*start by removing the \"active\" class on all items:*/\r\n    removeActive(x);\r\n    if (currentFocus >= x.length) currentFocus = 0;\r\n    if (currentFocus < 0) currentFocus = (x.length - 1);\r\n    /*add class \"autocomplete-active\":*/\r\n    x[currentFocus].classList.add(\"autocomplete-active\");\r\n  }\r\n  function removeActive(x) {\r\n    /*a function to remove the \"active\" class from all autocomplete items:*/\r\n    for (var i = 0; i < x.length; i++) {\r\n      x[i].classList.remove(\"autocomplete-active\");\r\n    }\r\n  }\r\n  function closeAllLists(elmnt) {\r\n    /*close all autocomplete lists in the document,\r\n    except the one passed as an argument:*/\r\n    var x = document.getElementsByClassName(\"autocomplete-items\");\r\n    for (var i = 0; i < x.length; i++) {\r\n      if (elmnt != x[i] && elmnt != inp) {\r\n        x[i].parentNode.removeChild(x[i]);\r\n      }\r\n    }\r\n  }\r\n  /*execute a function when someone clicks in the document:*/\r\n  document.addEventListener(\"click\", function (e) {\r\n      closeAllLists(e.target);\r\n  });\r\n}\r\n\r\n/*An array containing all the country names in the world:*/\r\nvar countries = [\"Afghanistan\",\"Albania\",\"Algeria\",\"Andorra\",\"Angola\",\"Anguilla\",\"Antigua & Barbuda\",\"Argentina\",\"Armenia\",\"Aruba\",\"Australia\",\"Austria\",\"Azerbaijan\",\"Bahamas\",\"Bahrain\",\"Bangladesh\",\"Barbados\",\"Belarus\",\"Belgium\",\"Belize\",\"Benin\",\"Bermuda\",\"Bhutan\",\"Bolivia\",\"Bosnia & Herzegovina\",\"Botswana\",\"Brazil\",\"British Virgin Islands\",\"Brunei\",\"Bulgaria\",\"Burkina Faso\",\"Burundi\",\"Cambodia\",\"Cameroon\",\"Canada\",\"Cape Verde\",\"Cayman Islands\",\"Central Arfrican Republic\",\"Chad\",\"Chile\",\"China\",\"Colombia\",\"Congo\",\"Cook Islands\",\"Costa Rica\",\"Cote D Ivoire\",\"Croatia\",\"Cuba\",\"Curacao\",\"Cyprus\",\"Czech Republic\",\"Denmark\",\"Djibouti\",\"Dominica\",\"Dominican Republic\",\"Ecuador\",\"Egypt\",\"El Salvador\",\"Equatorial Guinea\",\"Eritrea\",\"Estonia\",\"Ethiopia\",\"Falkland Islands\",\"Faroe Islands\",\"Fiji\",\"Finland\",\"France\",\"French Polynesia\",\"French West Indies\",\"Gabon\",\"Gambia\",\"Georgia\",\"Germany\",\"Ghana\",\"Gibraltar\",\"Greece\",\"Greenland\",\"Grenada\",\"Guam\",\"Guatemala\",\"Guernsey\",\"Guinea\",\"Guinea Bissau\",\"Guyana\",\"Haiti\",\"Honduras\",\"Hong Kong\",\"Hungary\",\"Iceland\",\"India\",\"Indonesia\",\"Iran\",\"Iraq\",\"Ireland\",\"Isle of Man\",\"Israel\",\"Italy\",\"Jamaica\",\"Japan\",\"Jersey\",\"Jordan\",\"Kazakhstan\",\"Kenya\",\"Kiribati\",\"Kosovo\",\"Kuwait\",\"Kyrgyzstan\",\"Laos\",\"Latvia\",\"Lebanon\",\"Lesotho\",\"Liberia\",\"Libya\",\"Liechtenstein\",\"Lithuania\",\"Luxembourg\",\"Macau\",\"Macedonia\",\"Madagascar\",\"Malawi\",\"Malaysia\",\"Maldives\",\"Mali\",\"Malta\",\"Marshall Islands\",\"Mauritania\",\"Mauritius\",\"Mexico\",\"Micronesia\",\"Moldova\",\"Monaco\",\"Mongolia\",\"Montenegro\",\"Montserrat\",\"Morocco\",\"Mozambique\",\"Myanmar\",\"Namibia\",\"Nauro\",\"Nepal\",\"Netherlands\",\"Netherlands Antilles\",\"New Caledonia\",\"New Zealand\",\"Nicaragua\",\"Niger\",\"Nigeria\",\"North Korea\",\"Norway\",\"Oman\",\"Pakistan\",\"Palau\",\"Palestine\",\"Panama\",\"Papua New Guinea\",\"Paraguay\",\"Peru\",\"Philippines\",\"Poland\",\"Portugal\",\"Puerto Rico\",\"Qatar\",\"Reunion\",\"Romania\",\"Russia\",\"Rwanda\",\"Saint Pierre & Miquelon\",\"Samoa\",\"San Marino\",\"Sao Tome and Principe\",\"Saudi Arabia\",\"Senegal\",\"Serbia\",\"Seychelles\",\"Sierra Leone\",\"Singapore\",\"Slovakia\",\"Slovenia\",\"Solomon Islands\",\"Somalia\",\"South Africa\",\"South Korea\",\"South Sudan\",\"Spain\",\"Sri Lanka\",\"St Kitts & Nevis\",\"St Lucia\",\"St Vincent\",\"Sudan\",\"Suriname\",\"Swaziland\",\"Sweden\",\"Switzerland\",\"Syria\",\"Taiwan\",\"Tajikistan\",\"Tanzania\",\"Thailand\",\"Timor L'Este\",\"Togo\",\"Tonga\",\"Trinidad & Tobago\",\"Tunisia\",\"Turkey\",\"Turkmenistan\",\"Turks & Caicos\",\"Tuvalu\",\"Uganda\",\"Ukraine\",\"United Arab Emirates\",\"United Kingdom\",\"United States of America\",\"Uruguay\",\"Uzbekistan\",\"Vanuatu\",\"Vatican City\",\"Venezuela\",\"Vietnam\",\"Virgin Islands (US)\",\"Yemen\",\"Zambia\",\"Zimbabwe\"];\r\n\r\n/*initiate the autocomplete function on the \"myInput\" element, and pass along the countries array as possible autocomplete values:*/\r\nautocomplete(document.getElementById(\"myInput\"), countries);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBhdXRvY29tcGxldGUoaW5wLCBhcnIpIHtcclxuICAvKnRoZSBhdXRvY29tcGxldGUgZnVuY3Rpb24gdGFrZXMgdHdvIGFyZ3VtZW50cyxcclxuICB0aGUgdGV4dCBmaWVsZCBlbGVtZW50IGFuZCBhbiBhcnJheSBvZiBwb3NzaWJsZSBhdXRvY29tcGxldGVkIHZhbHVlczoqL1xyXG4gIHZhciBjdXJyZW50Rm9jdXM7XHJcbiAgLypleGVjdXRlIGEgZnVuY3Rpb24gd2hlbiBzb21lb25lIHdyaXRlcyBpbiB0aGUgdGV4dCBmaWVsZDoqL1xyXG4gIGlucC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgZnVuY3Rpb24oZSkge1xyXG4gICAgICB2YXIgYSwgYiwgaSwgdmFsID0gdGhpcy52YWx1ZTtcclxuICAgICAgLypjbG9zZSBhbnkgYWxyZWFkeSBvcGVuIGxpc3RzIG9mIGF1dG9jb21wbGV0ZWQgdmFsdWVzKi9cclxuICAgICAgY2xvc2VBbGxMaXN0cygpO1xyXG4gICAgICBpZiAoIXZhbCkgeyByZXR1cm4gZmFsc2U7fVxyXG4gICAgICBjdXJyZW50Rm9jdXMgPSAtMTtcclxuICAgICAgLypjcmVhdGUgYSBESVYgZWxlbWVudCB0aGF0IHdpbGwgY29udGFpbiB0aGUgaXRlbXMgKHZhbHVlcyk6Ki9cclxuICAgICAgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJESVZcIik7XHJcbiAgICAgIGEuc2V0QXR0cmlidXRlKFwiaWRcIiwgdGhpcy5pZCArIFwiYXV0b2NvbXBsZXRlLWxpc3RcIik7XHJcbiAgICAgIGEuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJhdXRvY29tcGxldGUtaXRlbXNcIik7XHJcbiAgICAgIC8qYXBwZW5kIHRoZSBESVYgZWxlbWVudCBhcyBhIGNoaWxkIG9mIHRoZSBhdXRvY29tcGxldGUgY29udGFpbmVyOiovXHJcbiAgICAgIHRoaXMucGFyZW50Tm9kZS5hcHBlbmRDaGlsZChhKTtcclxuICAgICAgLypmb3IgZWFjaCBpdGVtIGluIHRoZSBhcnJheS4uLiovXHJcbiAgICAgIGZvciAoaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAvKmNoZWNrIGlmIHRoZSBpdGVtIHN0YXJ0cyB3aXRoIHRoZSBzYW1lIGxldHRlcnMgYXMgdGhlIHRleHQgZmllbGQgdmFsdWU6Ki9cclxuICAgICAgICBpZiAoYXJyW2ldLnN1YnN0cigwLCB2YWwubGVuZ3RoKS50b1VwcGVyQ2FzZSgpID09IHZhbC50b1VwcGVyQ2FzZSgpKSB7XHJcbiAgICAgICAgICAvKmNyZWF0ZSBhIERJViBlbGVtZW50IGZvciBlYWNoIG1hdGNoaW5nIGVsZW1lbnQ6Ki9cclxuICAgICAgICAgIGIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiRElWXCIpO1xyXG4gICAgICAgICAgLyptYWtlIHRoZSBtYXRjaGluZyBsZXR0ZXJzIGJvbGQ6Ki9cclxuICAgICAgICAgIGIuaW5uZXJIVE1MID0gXCI8c3Ryb25nPlwiICsgYXJyW2ldLnN1YnN0cigwLCB2YWwubGVuZ3RoKSArIFwiPC9zdHJvbmc+XCI7XHJcbiAgICAgICAgICBiLmlubmVySFRNTCArPSBhcnJbaV0uc3Vic3RyKHZhbC5sZW5ndGgpO1xyXG4gICAgICAgICAgLyppbnNlcnQgYSBpbnB1dCBmaWVsZCB0aGF0IHdpbGwgaG9sZCB0aGUgY3VycmVudCBhcnJheSBpdGVtJ3MgdmFsdWU6Ki9cclxuICAgICAgICAgIGIuaW5uZXJIVE1MICs9IFwiPGlucHV0IHR5cGU9J2hpZGRlbicgdmFsdWU9J1wiICsgYXJyW2ldICsgXCInPlwiO1xyXG4gICAgICAgICAgLypleGVjdXRlIGEgZnVuY3Rpb24gd2hlbiBzb21lb25lIGNsaWNrcyBvbiB0aGUgaXRlbSB2YWx1ZSAoRElWIGVsZW1lbnQpOiovXHJcbiAgICAgICAgICBiLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgICAgLyppbnNlcnQgdGhlIHZhbHVlIGZvciB0aGUgYXV0b2NvbXBsZXRlIHRleHQgZmllbGQ6Ki9cclxuICAgICAgICAgICAgICBpbnAudmFsdWUgPSB0aGlzLmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaW5wdXRcIilbMF0udmFsdWU7XHJcbiAgICAgICAgICAgICAgLypjbG9zZSB0aGUgbGlzdCBvZiBhdXRvY29tcGxldGVkIHZhbHVlcyxcclxuICAgICAgICAgICAgICAob3IgYW55IG90aGVyIG9wZW4gbGlzdHMgb2YgYXV0b2NvbXBsZXRlZCB2YWx1ZXM6Ki9cclxuICAgICAgICAgICAgICBjbG9zZUFsbExpc3RzKCk7XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICAgIGEuYXBwZW5kQ2hpbGQoYik7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgfSk7XHJcbiAgLypleGVjdXRlIGEgZnVuY3Rpb24gcHJlc3NlcyBhIGtleSBvbiB0aGUga2V5Ym9hcmQ6Ki9cclxuICBpbnAuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgZnVuY3Rpb24oZSkge1xyXG4gICAgICB2YXIgeCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuaWQgKyBcImF1dG9jb21wbGV0ZS1saXN0XCIpO1xyXG4gICAgICBpZiAoeCkgeCA9IHguZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJkaXZcIik7XHJcbiAgICAgIGlmIChlLmtleUNvZGUgPT0gNDApIHtcclxuICAgICAgICAvKklmIHRoZSBhcnJvdyBET1dOIGtleSBpcyBwcmVzc2VkLFxyXG4gICAgICAgIGluY3JlYXNlIHRoZSBjdXJyZW50Rm9jdXMgdmFyaWFibGU6Ki9cclxuICAgICAgICBjdXJyZW50Rm9jdXMrKztcclxuICAgICAgICAvKmFuZCBhbmQgbWFrZSB0aGUgY3VycmVudCBpdGVtIG1vcmUgdmlzaWJsZToqL1xyXG4gICAgICAgIGFkZEFjdGl2ZSh4KTtcclxuICAgICAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT0gMzgpIHsgLy91cFxyXG4gICAgICAgIC8qSWYgdGhlIGFycm93IFVQIGtleSBpcyBwcmVzc2VkLFxyXG4gICAgICAgIGRlY3JlYXNlIHRoZSBjdXJyZW50Rm9jdXMgdmFyaWFibGU6Ki9cclxuICAgICAgICBjdXJyZW50Rm9jdXMtLTtcclxuICAgICAgICAvKmFuZCBhbmQgbWFrZSB0aGUgY3VycmVudCBpdGVtIG1vcmUgdmlzaWJsZToqL1xyXG4gICAgICAgIGFkZEFjdGl2ZSh4KTtcclxuICAgICAgfSBlbHNlIGlmIChlLmtleUNvZGUgPT0gMTMpIHtcclxuICAgICAgICAvKklmIHRoZSBFTlRFUiBrZXkgaXMgcHJlc3NlZCwgcHJldmVudCB0aGUgZm9ybSBmcm9tIGJlaW5nIHN1Ym1pdHRlZCwqL1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICBpZiAoY3VycmVudEZvY3VzID4gLTEpIHtcclxuICAgICAgICAgIC8qYW5kIHNpbXVsYXRlIGEgY2xpY2sgb24gdGhlIFwiYWN0aXZlXCIgaXRlbToqL1xyXG4gICAgICAgICAgaWYgKHgpIHhbY3VycmVudEZvY3VzXS5jbGljaygpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gIH0pO1xyXG4gIGZ1bmN0aW9uIGFkZEFjdGl2ZSh4KSB7XHJcbiAgICAvKmEgZnVuY3Rpb24gdG8gY2xhc3NpZnkgYW4gaXRlbSBhcyBcImFjdGl2ZVwiOiovXHJcbiAgICBpZiAoIXgpIHJldHVybiBmYWxzZTtcclxuICAgIC8qc3RhcnQgYnkgcmVtb3ZpbmcgdGhlIFwiYWN0aXZlXCIgY2xhc3Mgb24gYWxsIGl0ZW1zOiovXHJcbiAgICByZW1vdmVBY3RpdmUoeCk7XHJcbiAgICBpZiAoY3VycmVudEZvY3VzID49IHgubGVuZ3RoKSBjdXJyZW50Rm9jdXMgPSAwO1xyXG4gICAgaWYgKGN1cnJlbnRGb2N1cyA8IDApIGN1cnJlbnRGb2N1cyA9ICh4Lmxlbmd0aCAtIDEpO1xyXG4gICAgLyphZGQgY2xhc3MgXCJhdXRvY29tcGxldGUtYWN0aXZlXCI6Ki9cclxuICAgIHhbY3VycmVudEZvY3VzXS5jbGFzc0xpc3QuYWRkKFwiYXV0b2NvbXBsZXRlLWFjdGl2ZVwiKTtcclxuICB9XHJcbiAgZnVuY3Rpb24gcmVtb3ZlQWN0aXZlKHgpIHtcclxuICAgIC8qYSBmdW5jdGlvbiB0byByZW1vdmUgdGhlIFwiYWN0aXZlXCIgY2xhc3MgZnJvbSBhbGwgYXV0b2NvbXBsZXRlIGl0ZW1zOiovXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHgubGVuZ3RoOyBpKyspIHtcclxuICAgICAgeFtpXS5jbGFzc0xpc3QucmVtb3ZlKFwiYXV0b2NvbXBsZXRlLWFjdGl2ZVwiKTtcclxuICAgIH1cclxuICB9XHJcbiAgZnVuY3Rpb24gY2xvc2VBbGxMaXN0cyhlbG1udCkge1xyXG4gICAgLypjbG9zZSBhbGwgYXV0b2NvbXBsZXRlIGxpc3RzIGluIHRoZSBkb2N1bWVudCxcclxuICAgIGV4Y2VwdCB0aGUgb25lIHBhc3NlZCBhcyBhbiBhcmd1bWVudDoqL1xyXG4gICAgdmFyIHggPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiYXV0b2NvbXBsZXRlLWl0ZW1zXCIpO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB4Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGlmIChlbG1udCAhPSB4W2ldICYmIGVsbW50ICE9IGlucCkge1xyXG4gICAgICAgIHhbaV0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh4W2ldKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAvKmV4ZWN1dGUgYSBmdW5jdGlvbiB3aGVuIHNvbWVvbmUgY2xpY2tzIGluIHRoZSBkb2N1bWVudDoqL1xyXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICBjbG9zZUFsbExpc3RzKGUudGFyZ2V0KTtcclxuICB9KTtcclxufVxyXG5cclxuLypBbiBhcnJheSBjb250YWluaW5nIGFsbCB0aGUgY291bnRyeSBuYW1lcyBpbiB0aGUgd29ybGQ6Ki9cclxudmFyIGNvdW50cmllcyA9IFtcIkFmZ2hhbmlzdGFuXCIsXCJBbGJhbmlhXCIsXCJBbGdlcmlhXCIsXCJBbmRvcnJhXCIsXCJBbmdvbGFcIixcIkFuZ3VpbGxhXCIsXCJBbnRpZ3VhICYgQmFyYnVkYVwiLFwiQXJnZW50aW5hXCIsXCJBcm1lbmlhXCIsXCJBcnViYVwiLFwiQXVzdHJhbGlhXCIsXCJBdXN0cmlhXCIsXCJBemVyYmFpamFuXCIsXCJCYWhhbWFzXCIsXCJCYWhyYWluXCIsXCJCYW5nbGFkZXNoXCIsXCJCYXJiYWRvc1wiLFwiQmVsYXJ1c1wiLFwiQmVsZ2l1bVwiLFwiQmVsaXplXCIsXCJCZW5pblwiLFwiQmVybXVkYVwiLFwiQmh1dGFuXCIsXCJCb2xpdmlhXCIsXCJCb3NuaWEgJiBIZXJ6ZWdvdmluYVwiLFwiQm90c3dhbmFcIixcIkJyYXppbFwiLFwiQnJpdGlzaCBWaXJnaW4gSXNsYW5kc1wiLFwiQnJ1bmVpXCIsXCJCdWxnYXJpYVwiLFwiQnVya2luYSBGYXNvXCIsXCJCdXJ1bmRpXCIsXCJDYW1ib2RpYVwiLFwiQ2FtZXJvb25cIixcIkNhbmFkYVwiLFwiQ2FwZSBWZXJkZVwiLFwiQ2F5bWFuIElzbGFuZHNcIixcIkNlbnRyYWwgQXJmcmljYW4gUmVwdWJsaWNcIixcIkNoYWRcIixcIkNoaWxlXCIsXCJDaGluYVwiLFwiQ29sb21iaWFcIixcIkNvbmdvXCIsXCJDb29rIElzbGFuZHNcIixcIkNvc3RhIFJpY2FcIixcIkNvdGUgRCBJdm9pcmVcIixcIkNyb2F0aWFcIixcIkN1YmFcIixcIkN1cmFjYW9cIixcIkN5cHJ1c1wiLFwiQ3plY2ggUmVwdWJsaWNcIixcIkRlbm1hcmtcIixcIkRqaWJvdXRpXCIsXCJEb21pbmljYVwiLFwiRG9taW5pY2FuIFJlcHVibGljXCIsXCJFY3VhZG9yXCIsXCJFZ3lwdFwiLFwiRWwgU2FsdmFkb3JcIixcIkVxdWF0b3JpYWwgR3VpbmVhXCIsXCJFcml0cmVhXCIsXCJFc3RvbmlhXCIsXCJFdGhpb3BpYVwiLFwiRmFsa2xhbmQgSXNsYW5kc1wiLFwiRmFyb2UgSXNsYW5kc1wiLFwiRmlqaVwiLFwiRmlubGFuZFwiLFwiRnJhbmNlXCIsXCJGcmVuY2ggUG9seW5lc2lhXCIsXCJGcmVuY2ggV2VzdCBJbmRpZXNcIixcIkdhYm9uXCIsXCJHYW1iaWFcIixcIkdlb3JnaWFcIixcIkdlcm1hbnlcIixcIkdoYW5hXCIsXCJHaWJyYWx0YXJcIixcIkdyZWVjZVwiLFwiR3JlZW5sYW5kXCIsXCJHcmVuYWRhXCIsXCJHdWFtXCIsXCJHdWF0ZW1hbGFcIixcIkd1ZXJuc2V5XCIsXCJHdWluZWFcIixcIkd1aW5lYSBCaXNzYXVcIixcIkd1eWFuYVwiLFwiSGFpdGlcIixcIkhvbmR1cmFzXCIsXCJIb25nIEtvbmdcIixcIkh1bmdhcnlcIixcIkljZWxhbmRcIixcIkluZGlhXCIsXCJJbmRvbmVzaWFcIixcIklyYW5cIixcIklyYXFcIixcIklyZWxhbmRcIixcIklzbGUgb2YgTWFuXCIsXCJJc3JhZWxcIixcIkl0YWx5XCIsXCJKYW1haWNhXCIsXCJKYXBhblwiLFwiSmVyc2V5XCIsXCJKb3JkYW5cIixcIkthemFraHN0YW5cIixcIktlbnlhXCIsXCJLaXJpYmF0aVwiLFwiS29zb3ZvXCIsXCJLdXdhaXRcIixcIkt5cmd5enN0YW5cIixcIkxhb3NcIixcIkxhdHZpYVwiLFwiTGViYW5vblwiLFwiTGVzb3Rob1wiLFwiTGliZXJpYVwiLFwiTGlieWFcIixcIkxpZWNodGVuc3RlaW5cIixcIkxpdGh1YW5pYVwiLFwiTHV4ZW1ib3VyZ1wiLFwiTWFjYXVcIixcIk1hY2Vkb25pYVwiLFwiTWFkYWdhc2NhclwiLFwiTWFsYXdpXCIsXCJNYWxheXNpYVwiLFwiTWFsZGl2ZXNcIixcIk1hbGlcIixcIk1hbHRhXCIsXCJNYXJzaGFsbCBJc2xhbmRzXCIsXCJNYXVyaXRhbmlhXCIsXCJNYXVyaXRpdXNcIixcIk1leGljb1wiLFwiTWljcm9uZXNpYVwiLFwiTW9sZG92YVwiLFwiTW9uYWNvXCIsXCJNb25nb2xpYVwiLFwiTW9udGVuZWdyb1wiLFwiTW9udHNlcnJhdFwiLFwiTW9yb2Njb1wiLFwiTW96YW1iaXF1ZVwiLFwiTXlhbm1hclwiLFwiTmFtaWJpYVwiLFwiTmF1cm9cIixcIk5lcGFsXCIsXCJOZXRoZXJsYW5kc1wiLFwiTmV0aGVybGFuZHMgQW50aWxsZXNcIixcIk5ldyBDYWxlZG9uaWFcIixcIk5ldyBaZWFsYW5kXCIsXCJOaWNhcmFndWFcIixcIk5pZ2VyXCIsXCJOaWdlcmlhXCIsXCJOb3J0aCBLb3JlYVwiLFwiTm9yd2F5XCIsXCJPbWFuXCIsXCJQYWtpc3RhblwiLFwiUGFsYXVcIixcIlBhbGVzdGluZVwiLFwiUGFuYW1hXCIsXCJQYXB1YSBOZXcgR3VpbmVhXCIsXCJQYXJhZ3VheVwiLFwiUGVydVwiLFwiUGhpbGlwcGluZXNcIixcIlBvbGFuZFwiLFwiUG9ydHVnYWxcIixcIlB1ZXJ0byBSaWNvXCIsXCJRYXRhclwiLFwiUmV1bmlvblwiLFwiUm9tYW5pYVwiLFwiUnVzc2lhXCIsXCJSd2FuZGFcIixcIlNhaW50IFBpZXJyZSAmIE1pcXVlbG9uXCIsXCJTYW1vYVwiLFwiU2FuIE1hcmlub1wiLFwiU2FvIFRvbWUgYW5kIFByaW5jaXBlXCIsXCJTYXVkaSBBcmFiaWFcIixcIlNlbmVnYWxcIixcIlNlcmJpYVwiLFwiU2V5Y2hlbGxlc1wiLFwiU2llcnJhIExlb25lXCIsXCJTaW5nYXBvcmVcIixcIlNsb3Zha2lhXCIsXCJTbG92ZW5pYVwiLFwiU29sb21vbiBJc2xhbmRzXCIsXCJTb21hbGlhXCIsXCJTb3V0aCBBZnJpY2FcIixcIlNvdXRoIEtvcmVhXCIsXCJTb3V0aCBTdWRhblwiLFwiU3BhaW5cIixcIlNyaSBMYW5rYVwiLFwiU3QgS2l0dHMgJiBOZXZpc1wiLFwiU3QgTHVjaWFcIixcIlN0IFZpbmNlbnRcIixcIlN1ZGFuXCIsXCJTdXJpbmFtZVwiLFwiU3dhemlsYW5kXCIsXCJTd2VkZW5cIixcIlN3aXR6ZXJsYW5kXCIsXCJTeXJpYVwiLFwiVGFpd2FuXCIsXCJUYWppa2lzdGFuXCIsXCJUYW56YW5pYVwiLFwiVGhhaWxhbmRcIixcIlRpbW9yIEwnRXN0ZVwiLFwiVG9nb1wiLFwiVG9uZ2FcIixcIlRyaW5pZGFkICYgVG9iYWdvXCIsXCJUdW5pc2lhXCIsXCJUdXJrZXlcIixcIlR1cmttZW5pc3RhblwiLFwiVHVya3MgJiBDYWljb3NcIixcIlR1dmFsdVwiLFwiVWdhbmRhXCIsXCJVa3JhaW5lXCIsXCJVbml0ZWQgQXJhYiBFbWlyYXRlc1wiLFwiVW5pdGVkIEtpbmdkb21cIixcIlVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYVwiLFwiVXJ1Z3VheVwiLFwiVXpiZWtpc3RhblwiLFwiVmFudWF0dVwiLFwiVmF0aWNhbiBDaXR5XCIsXCJWZW5lenVlbGFcIixcIlZpZXRuYW1cIixcIlZpcmdpbiBJc2xhbmRzIChVUylcIixcIlllbWVuXCIsXCJaYW1iaWFcIixcIlppbWJhYndlXCJdO1xyXG5cclxuLyppbml0aWF0ZSB0aGUgYXV0b2NvbXBsZXRlIGZ1bmN0aW9uIG9uIHRoZSBcIm15SW5wdXRcIiBlbGVtZW50LCBhbmQgcGFzcyBhbG9uZyB0aGUgY291bnRyaWVzIGFycmF5IGFzIHBvc3NpYmxlIGF1dG9jb21wbGV0ZSB2YWx1ZXM6Ki9cclxuYXV0b2NvbXBsZXRlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibXlJbnB1dFwiKSwgY291bnRyaWVzKTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ });